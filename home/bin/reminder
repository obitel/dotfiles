#!/usr/bin/env python

"""
Popup (growl) reminder for a certain time.

Usage:
    reminder TIME [MESSAGE]

Examples:
    reminder 5m             # reminder in 5 minutes
    reminder 5m blah blah   # ... in 5 minutes with message "blah blah"
    reminder 1:30           # ... at 1:30 (the *next* 1:30, am/pm depends)
    reminder 10:00p         # ... at 10:00 pm
    reminder 10:00a         # ... at 10:00 am
    reminder 10p            # ... at 10:00 pm (shortcut)
    reminder 1h             # ... in 1 hour
    reminder 10s            # ... in 10 seconds
    reminder 1:30h          # ... in 1 hour and 30 minutes
    reminder 1:30m          # ... in 1 minute and 30 seconds
    reminder now            # ... right now
    reminder 1:23:45h       # ... in 1 hour, 23 minutes and 45 seconds
"""

import sys
import os
import datetime
import codecs
import re
import tempfile



#---- exceptions

class ReminderError(Exception):
    pass


#---- support stuff

def usage():
    print __doc__

#var endPattern = /^([1-9]\d*)([mhd])$/;
def timeFromArg(arg, now):
    timePatterns = [
        ("now", re.compile("now")),
        ("relative", re.compile("(?P<first>[1-9][0-9]*)(?P<scope>[smhd])")),
        #("absolute", re.compile("([1-9])[0-9]*[mhd]")),
    ]
    for timeType, pat in timePatterns:
        m = pat.search(arg)
        if m:
            break
    else:
        raise ReminderError("invalid time argument: '%s'" % arg)
    if timeType == "now":
        time = now
    elif timeType == "relative":
        time = now
        first = int(m.group("first"))
        scope = m.group("scope")
        if scope == 's':
            time += datetime.timedelta(seconds=first)
        elif scope == 'm':
            time += datetime.timedelta(minutes=first)
        elif scope == 'h':
            time += datetime.timedelta(hours=first)
        elif scope == 'd':
            time += datetime.timedelta(days=first)
    else:
        raise ReminderError("WTF?")
    return time


#---- mainline

def main(argv):
    if len(argv) < 2:
        usage()
        return 2
    message = None
    if len(argv) > 2:
        message = ' '.join(argv[2:])
    now = datetime.datetime.now()
    time = timeFromArg(argv[1], now=now)
    assert time >= now
    delta = time - now

    fd, path = tempfile.mkstemp(prefix='reminder-tmp')
    f = os.fdopen(fd, 'w')
    f.write("sleep %d\n" % delta.seconds)
    if message:
        message_arg = " -m '%s'" % message
    else:
        message_arg = ""
    time_str = time.strftime("%I:%M %p").lstrip('0')
    f.write("growlnotify -s -t 'Reminder at %s' -a iCal %s\n"
        % (time_str, message_arg))
    f.close()
    os.system('nohup bash "%s" 2>/dev/null &' % path)

if __name__ == '__main__':
    sys.exit(main(sys.argv))
